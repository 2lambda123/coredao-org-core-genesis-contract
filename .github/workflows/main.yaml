# This is a basic workflow to help you get started with Actions

name: System Contract CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "merge_test_script" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set up Python Environment
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          pyenv activate brownie
          
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-nodeModules-${{ hashFiles('package-lock.json') }}-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-nodeModules-
          
      - name: Install Node Dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: |
          npm install
      
      - name: Run tests
        run: |
          node generate-system.js --mock true
          node generate-candidatehub.js --mock true
          node generate-pledgeagent.js --mock true
          brownie test -v --stateful false
